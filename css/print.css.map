{
	"version": 3,
	"file": "print.css",
	"sourceRoot": "C:/Users/eb2m-/OneDrive/創業/info-a11y-site-bilingual",
	"sources": [
		"themes/zen/assets/sass/print.scss",
		"themes/zen/assets/sass/_init.scss",
		"themes/zen/assets/sass/_sass_variables.scss",
		"themes/zen/assets/sass/_extra.scss",
		"themes/zen/assets/sass/mixins/breakpoint/_respond-to.scss",
		"themes/zen/assets/sass/mixins/flex-calc/_flex-calc.scss",
		"themes/zen/assets/sass/mixins/spacing/_spacing.scss"
	],
	"sourcesContent": [
		"/* The print stylesheet for this theme. */\r\n\r\n@import 'init';\r\n\r\n.pager,\r\n%pager,\r\n.mobile-nav,\r\naside,\r\nnav,\r\nfooter {\r\n  display: none;\r\n}\r\n\r\n@media print {\r\n  html {\r\n    font-size: var(--print-font-size);\r\n  }\r\n\r\n  html,\r\n  body,\r\n  .page {\r\n    background-color: white;\r\n    border-color: black;\r\n    box-shadow: none;\r\n    color: black;\r\n  }\r\n\r\n  .main {\r\n    width: 100%;\r\n  }\r\n\r\n  /* Underline all links. */\r\n  :link,\r\n  :visited {\r\n    text-decoration: underline;\r\n  }\r\n\r\n  /* Add visible title after abbreviations. */\r\n  abbr[title] {\r\n    &::after {\r\n      content: ' (' attr(title) ')';\r\n    }\r\n  }\r\n}\r\n",
		"/* Initialization partial\r\n\r\nTo make it easier to use all variables and mixins in any Sass file in this\r\nproject, each .scss file has a `@import 'init';` declaration. The _init.scss\r\nfile is in charge of importing all the other partials needed for the\r\nproject. */\r\n\r\n/* Variables. */\r\n@import 'sass_variables';\r\n@import 'extra';\r\n\r\n/* Mixins and functions. */\r\n@import 'mixins/breakpoint/respond-to';\r\n@import 'mixins/flex-calc/flex-calc';\r\n@import 'mixins/spacing/spacing';\r\n",
		"/* Variables\r\nThese need to be sass variables since they are used in sass functions and mixins.\r\nOverride sass variables in \"assets/sass/_extra.scss\" */\r\n\r\n/* Base line height, unitless. */\r\n$base-line-height: 1.5;\r\n\r\n/* The font sizes in our type hierarchy as tee shirt sizes.\r\nSize m is base.\r\nUse like this: var(--fs-m) */\r\n$font-size-fixed: (\r\n  xxxxl:      3rem,\r\n  xxxl:       2.5rem,\r\n  xxl:        2rem,\r\n  xl:         1.5rem,\r\n  l:          1.25rem,\r\n  m:          1rem,\r\n  s:          0.889rem,\r\n  xs:         0.778rem,\r\n);\r\n\r\n/* The responsive font sizes in our type hierarchy as tee shirt sizes.\r\nSize m is base.\r\nUse like this: var(--fs-m) */\r\n$font-size-fluid: (\r\n  xxxxl:      clamp(2.4881rem, calc(1.8896rem + 2.9924vw), 4.2088rem),\r\n  xxxl:       clamp(2.0738rem, calc(1.6968rem + 1.8848vw), 3.1575rem),\r\n  xxl:        clamp(1.7281rem, calc(1.5053rem + 1.1141vw), 2.3688rem),\r\n  xl:         clamp(1.44rem, calc(1.3228rem + 0.5859vw), 1.7769rem),\r\n  l:          clamp(1.2rem, calc(1.1537rem + 0.2315vw), 1.3331rem),\r\n  m:          1rem,\r\n  s:          0.889rem,\r\n  xs:         0.778rem,\r\n);\r\n\r\n/* Set the font sizes to use, fixed or fluid. */\r\n$font-size: $font-size-fixed;\r\n\r\n/* Breakpoints (Deprecated in v5, use css @media directly instead.)\r\nUse the `respond-to(s)` mixin to use named breakpoints. */\r\n$breakpoints: (\r\n  'xxxl':     1222px,\r\n  'xxl':      1111px,\r\n  'xl':       999px,\r\n  'l':        888px,\r\n  'm':        777px,\r\n  's':        666px,\r\n  'xs':       555px,\r\n  'xxs':      444px,\r\n  'xxxs':     333px,\r\n);\r\n\r\n/* Spacing (Deprecated in v5, use spacing css variables instead.)\r\n$spacing: (\r\n  xxl:        3,\r\n  xl:         2,\r\n  l:          1.5,\r\n  m:          1,\r\n  s:          0.75,\r\n  xs:         0.5,\r\n  xxs:        0.3,\r\n  0:          0,\r\n);\r\n\r\n/* The max content width. (Consider using one of the breakpoints.) */\r\n$max-content-width: 1111px;\r\n\r\n/* The max page width. Defaults to max-content-width.\r\nSetting this to a larger value than max-content-width allows\r\ncontent with class \"stretch\" to stretch out to the page edge. */\r\n$max-page-width: $max-content-width;\r\n",
		"/* Add and override variables. This file loads last during init. */\r\n",
		"@mixin respond-to($breakpoint) {\r\n  /* If the key exists in the map */\r\n  @if map-has-key($breakpoints, $breakpoint) {\r\n    /* Prints a media query based on the value */\r\n    @media (min-width: map-get($breakpoints, $breakpoint)) {\r\n      @content;\r\n    }\r\n  } @else {\r\n    @media (min-width: $breakpoint) {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin respond-to-max($breakpoint) {\r\n  /* If the key exists in the map */\r\n  @if map-has-key($breakpoints, $breakpoint) {\r\n    /* Prints a media query based on the value */\r\n    @media (max-width: map-get($breakpoints, $breakpoint)) {\r\n      @content;\r\n    }\r\n  } @else {\r\n    @media (max-width: $breakpoint) {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n",
		"@mixin flex($col, $gap) {\r\n  flex-basis: calc(100% / #{$col} - #{$gap * $base-line-height + 'rem'});\r\n}\r\n",
		"@mixin spacing($property, $spacing, $unit) {\r\n  $converted-list: ();\r\n\r\n  @each $x in $spacing {\r\n    $xunit: $unit;\r\n\r\n    @if $x == 0 {\r\n      $xunit: '';\r\n    }\r\n\r\n    $spacing: #{$x * $base-line-height + $xunit};\r\n    $converted-list: join($converted-list, $spacing, $separator: space);\r\n  }\r\n\r\n  #{$property}: $converted-list;\r\n}\r\n\r\n@mixin gap($x, $unit: 'rem') {\r\n  @include spacing(gap, $x, $unit);\r\n}\r\n\r\n@mixin margin($x, $unit: 'rem') {\r\n  @include spacing(margin, $x, $unit);\r\n}\r\n\r\n@mixin margin-inline($x, $unit: 'rem') {\r\n  @include spacing(margin-inline, $x, $unit);\r\n}\r\n\r\n@mixin margin-inline-start($x, $unit: 'rem') {\r\n  @include spacing(margin-inline-start, $x, $unit);\r\n}\r\n\r\n@mixin margin-inline-end($x, $unit: 'rem') {\r\n  @include spacing(margin-inline-end, $x, $unit);\r\n}\r\n\r\n@mixin margin-block($x, $unit: 'rem') {\r\n  @include spacing(margin-block, $x, $unit);\r\n}\r\n\r\n@mixin margin-block-start($x, $unit: 'rem') {\r\n  @include spacing(margin-block-start, $x, $unit);\r\n}\r\n\r\n@mixin margin-block-end($x, $unit: 'rem') {\r\n  @include spacing(margin-block-end, $x, $unit);\r\n}\r\n\r\n@mixin margin-top($x, $unit: 'rem') {\r\n  @include spacing(margin-top, $x, $unit);\r\n}\r\n\r\n@mixin margin-bottom($x, $unit: 'rem') {\r\n  @include spacing(margin-bottom, $x, $unit);\r\n}\r\n\r\n@mixin margin-left($x, $unit: 'rem') {\r\n  @include spacing(margin-left, $x, $unit);\r\n}\r\n\r\n@mixin margin-right($x, $unit: 'rem') {\r\n  @include spacing(margin-right, $x, $unit);\r\n}\r\n\r\n@mixin padding($x, $unit: 'rem') {\r\n  @include spacing(padding, $x, $unit);\r\n}\r\n\r\n@mixin padding-inline($x, $unit: 'rem') {\r\n  @include spacing(padding-inline, $x, $unit);\r\n}\r\n\r\n@mixin padding-inline-start($x, $unit: 'rem') {\r\n  @include spacing(padding-inline-start, $x, $unit);\r\n}\r\n\r\n@mixin padding-inline-end($x, $unit: 'rem') {\r\n  @include spacing(padding-inline-end, $x, $unit);\r\n}\r\n\r\n@mixin padding-block($x, $unit: 'rem') {\r\n  @include spacing(padding-block, $x, $unit);\r\n}\r\n\r\n@mixin padding-block-start($x, $unit: 'rem') {\r\n  @include spacing(padding-block-start, $x, $unit);\r\n}\r\n\r\n@mixin padding-block-end($x, $unit: 'rem') {\r\n  @include spacing(padding-block-end, $x, $unit);\r\n}\r\n\r\n@mixin padding-top($x, $unit: 'rem') {\r\n  @include spacing(padding-top, $x, $unit);\r\n}\r\n\r\n@mixin padding-bottom($x, $unit: 'rem') {\r\n  @include spacing(padding-bottom, $x, $unit);\r\n}\r\n\r\n@mixin padding-left($x, $unit: 'rem') {\r\n  @include spacing(padding-left, $x, $unit);\r\n}\r\n\r\n@mixin padding-right($x, $unit: 'rem') {\r\n  @include spacing(padding-right, $x, $unit);\r\n}\r\n"
	],
	"names": [],
	"mappings": "AAAA,0CAA0C;ACA1C;;;;;WAKW;AAEX,gBAAgB;ACPhB;;uDAEuD;AAEvD,iCAAiC;AAGjC;;6BAE6B;AAY7B;;6BAE6B;AAY7B,gDAAgD;AAGhD;0DAC0D;AAa1D;;;;;;;;;;;;qEAYqE;AAGrE;;gEAEgE;ACrEhE,mEAAmE;AFWnE,2BAA2B;ADP3B,AAAA,MAAM;AAEN,WAAW;AACX,KAAK;AACL,GAAG;AACH,MAAM,CAAC;EACL,OAAO,EAAE,IAAI,GACd;;AAED,MAAM,MACJ;EAAA,AAAA,IAAI,CAAC;IACH,SAAS,EAAE,sBAAsB,GAClC;EAED,AAAA,IAAI;EACJ,IAAI;EACJ,KAAK,CAAC;IACJ,gBAAgB,EAAE,KAAK;IACvB,YAAY,EAAE,KAAK;IACnB,UAAU,EAAE,IAAI;IAChB,KAAK,EAAE,KAAK,GACb;EAED,AAAA,KAAK,CAAC;IACJ,KAAK,EAAE,IAAI,GACZ;EAED,0BAA0B;GACzB,AAAD,IAAK;GACJ,OAAO,CAAC;IACP,eAAe,EAAE,SAAS,GAC3B;EAED,4CAA4C;EAC5C,AACE,IADE,CAAA,AAAA,KAAC,AAAA,GACA,KAAK,CAAC;IACP,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,GAC9B,EAzBF"
}